package Behörighet2;

/*
 * Klass för att ge  alternativt dra av poäng från Elevhemmen
 */

import StartPaket.Validering;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author Gabriel
 */
public class Poang extends javax.swing.JFrame {

    public InfDB idb;
    
    /**
     * Creates new form Huvudfonster
     *
     * @throws oru.inf.InfException
     */
    public Poang(InfDB idb){
        initComponents();
        this.idb=idb;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        antal = new javax.swing.JTextField();
        ok = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        info1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        elevhemCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        antal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                antalMouseEntered(evt);
            }
        });

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        jLabel1.setText("Poäng för Elevhemspokalen");

        jLabel3.setText("Ge poäng eller dra av");

        info1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                info1MouseExited(evt);
            }
        });

        jLabel6.setText("<- Tillbaka");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        elevhemCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elevhem", "Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(info1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155)
                        .addComponent(ok))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(elevhemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(antal, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(antal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(elevhemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(info1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 102, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ok)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed

        // Ger felmeddelande vid tomma inmatningsrutor samt felaktig inmatning
        if  (Validering.isHeltal(antal)) {

            // Deklarerar varibler  och kör toUpperCase metod
            try {
                String enamn = elevhemCombo.getSelectedItem().toString();
                // Kontrollerar att valt elevhem finns 
                String svar = idb.fetchSingle("SELECT ELEVHEMSNAMN from ELEVHEM where ELEVHEMSNAMN =" + "'" + enamn + "'");
                if (svar == null) {
                    JOptionPane.showMessageDialog(null, " Elevhemmet finns inte, kontrollera inmatningen");
                } else {
                    // Hämtar nuvarande poäng
                    String hamtad = idb.fetchSingle("SELECT HUSPOANG from ELEVHEM where ELEVHEMSNAMN =" + "'" + enamn + "'");

                    // Konverterar Strängar till int för att kunna summera
                    String talstrang = antal.getText();
                    String talstrang2 = hamtad;

                    int tal1 = Integer.parseInt(talstrang);
                    int tal2 = Integer.parseInt(talstrang2);

                    int summa = tal1 + tal2;
                    // konverterar tillbaka till Sträng för
                    // sedan skicka tillbaka resultatet till FDB
                    String summaStrang = Integer.toString(summa);

                    // Ändrar poängen till den gamla poängen + den nya
                    idb.update("UPDATE ELEVHEM SET HUSPOANG=" + summaStrang + "where ELEVHEMSNAMN=" + "'" + enamn + "'");

                    // Meddelar uppdateringen som skett
                    JOptionPane.showMessageDialog(null, svar + " har fått " + talstrang + " poäng" + " "
                            + " total " + summaStrang);
                }
                // catch för att hindra crash
            } catch (HeadlessException | NumberFormatException | InfException e) {
                JOptionPane.showMessageDialog(null, "Något gick fel!");
                System.out.println("Internt felmeddelande" + e.getMessage());
            }
        }
    }//GEN-LAST:event_okActionPerformed

    private void antalMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_antalMouseEntered
    // ger en inforuta angånde poängsättning
        info1.setVisible(true);
        info1.setText("Vid avdrag av poäng använd - tecken");
    }//GEN-LAST:event_antalMouseEntered

    private void info1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_info1MouseExited
    //stänger inforutan efter musen lämnat inmatningsfältet
        info1.setVisible(false);
    }//GEN-LAST:event_info1MouseExited

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        //Går tillbaka till meny
        dispose();
    }//GEN-LAST:event_jLabel6MouseClicked
       

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField antal;
    private javax.swing.JComboBox<String> elevhemCombo;
    private javax.swing.JLabel info1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton ok;
    // End of variables declaration//GEN-END:variables
}
