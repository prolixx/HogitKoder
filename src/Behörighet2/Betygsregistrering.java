package Behörighet2;

    /* Klass för att registrera nytt betyg för elev.
    För ändring av betyg används en annan klass.
*/

import StartPaket.Validering;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import oru.inf.InfDB;
import oru.inf.InfException;
import javax.swing.JOptionPane;


public class Betygsregistrering extends javax.swing.JFrame {
private final InfDB idb;
    
    public Betygsregistrering(InfDB idb) {
        initComponents();
          this.idb =idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fornamn = new javax.swing.JTextField();
        efternamn = new javax.swing.JTextField();
        kurs = new javax.swing.JTextField();
        betyg = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Elev förnamn");

        jLabel2.setText("Elev efternamn");

        jLabel3.setText("Kurs namn");

        jLabel4.setText("Betygsbeteckning");

        jLabel5.setText("Registrera Betyg");

        jLabel6.setText("<- Tillbaka");
        jLabel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(23, 23, 23)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(kurs, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                .addComponent(efternamn)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(betyg))
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                            .addComponent(fornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(215, 215, 215))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(efternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(kurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(betyg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Ger felmeddeland vid tomma inmatingsrutor. 
        if (Validering.textNamnHarVarde(fornamn, efternamn)
                && (Validering.textFaltHarVarde(betyg)) && (Validering.textFaltHarVarde(kurs))) {

            try {

                //Deklarerar variabler och använder till Uppercase metod
                String fnamn = Validering.storBokstav(fornamn.getText());
                String enamn = Validering.storBokstav(efternamn.getText());
                String b = Validering.storBokstav(betyg.getText());

                String kursen = kurs.getText();

                boolean ok = true;

                //Hämtar kurs id från kurs med hjäp av det inmatade kursnamnet
                String k = idb.fetchSingle("SELECT KURS_ID from KURS where KURSNAMN=" + "'" + kursen + "'");
                //Kontrollerar att kursen finns, annars skriver ut felmmedelande 
                if (k == null) {
                    JOptionPane.showMessageDialog(null, " Kursen finns inte");
                } else {
                    //Hämtar elev id från elev med hjäp av inmatat för och eftternamn 
                    String idf = idb.fetchSingle("SELECT ELEV_ID FROM ELEV where fornamn=" + "'" + fnamn + "'" + "and efternamn=" + "'" + enamn + "'");
                    //Kontrollerar att Eleven finns, annars skriver ut felmmedelande 
                    if (idf == null) {
                        JOptionPane.showMessageDialog(null, " Eleven finns inte");
                    } else {
                        //Hämtar elevens betyg  i vald kurs med hjälpa av elev id oc kurs id
                        String a = idb.fetchSingle("SELECT KURSBETYG FROM HAR_BETYG_I where ELEV_ID=" + "'" + idf + "'" + "and KURS_ID=" + "'" + k + "'");
                        //Kollar att eleven inte redan har betyg i kursen.
                        if (!(null == a)) {
                            JOptionPane.showMessageDialog(null, "Eleven har redan betyg i kursen. Välj ändra uppdatea betyg för ändring");
                        } else {
                            //Skapar en ArrayList av befitliga betygsbetckningar
                            ArrayList<String> bs = idb.fetchColumn("SELECT BETYGSBETECKNING from BETYG");

                            // Kontrollera om valt betyg finns i listan
                            if (!bs.contains(b)) {
                                ok = false;
                                JOptionPane.showMessageDialog(null, "Betyg finns ej i skalan");
                            }

                            if (ok = true) {

                                // Lägger till i tabellen har betyg i; elevens id, kursens id och valt betyg
                                idb.insert("insert into HAR_BETYG_I values" + "(" + "'" + idf + "'" + "," + "'" + k + "'" + "," + "'" + b + "')");
                                JOptionPane.showMessageDialog(null, "Nytt betyg är nu registrerat");
                            }
                        }
                    }
                }

            } catch (InfException ex) {
                Logger.getLogger(Betygsregistrering.class.getName()).log(Level.SEVERE, null, ex);
             JOptionPane.showMessageDialog(null, " Något gick fel, kontrollera inmatningen");}

        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        //Går tillbaka till meny
        dispose();
    }//GEN-LAST:event_jLabel6MouseClicked



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField betyg;
    private javax.swing.JTextField efternamn;
    private javax.swing.JTextField fornamn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField kurs;
    // End of variables declaration//GEN-END:variables
}
